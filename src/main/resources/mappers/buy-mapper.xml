<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!-- collection의 객체를 여러개 가진 list형식에 쓰는데 property에는 데이터 여러개가 들어있는 변수이고 resultMap은 
	어디에 연결시킬건지 지정하는 것 -->
<mapper namespace="buyMapper">
 	<resultMap type="com.study.shop.buy.vo.BuyVO" id="buy">
		<id column="BUY_CODE" 			property="buyCode" />
		<result column="MEM_ID" 		property="memId" />
		<result column="BUY_PRICE" 		property="buyPrice" />
		<result column="BUY_DATE" 		property="buyDate" />
		<result column="ETC" 			property="etc"/>
		<collection property="buyDetailList" resultMap="buyDetail"></collection>
	</resultMap>
	<resultMap type="com.study.shop.buy.vo.BuyDetailVO" id="buyDetail">
		<id column="BUY_DETAIL_CODE" 			property="buyDetailCode" />
		<result column="ITEM_CODE" 				property="itemCode" />
		<result column="BUY_CNT" 				property="buyCnt" />
		<result column="DETAIL_BUY_PRICE" 		property="detailBuyPrice" />
		<result column="BUY_CODE" 				property="buyCode" />
		<association property="categoryVO" 		resultMap="itemMapper.category"></association>
		<association property="itemVO" 			resultMap="itemMapper.item"></association>
	</resultMap>
	 
	<!-- 구매 코드 조회 -->
	<select id="getNextBuyCode" resultType="String">
		SELECT 'BUY_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BUY_CODE, 5))), 0) + 1, 3, '0')
		FROM SHOP_BUY
	</select>
	
	<!-- 상품 구매 : 구매 정보 등록-->
	<insert id="regBuy">
		INSERT INTO SHOP_BUY (
			BUY_CODE
			, MEM_ID
			, BUY_PRICE
		) VALUES (
			#{buyCode}
			, #{memId}
			, #{buyPrice}		
		)
	</insert>
	
	<!-- 상품 구매 : 주문 상태 정보 등록 -->
	<insert id="regOrderStatus">
		INSERT INTO ORDER_STATUS (
			ORDER_NUM
			, STATUS_CODE
			, BUY_CODE
			, MEM_ID
		) VALUES (
			(SELECT NVL(MAX(ORDER_NUM), 0) + 1
			FROM ORDER_STATUS)
			, 1
			, #{buyCode}
			, #{memId}
		)
	</insert>
	
	<!-- 상품 구매 : 구매 상세 정보 등록 -->
	<insert id="regBuyDetail">
		INSERT INTO BUY_DETAIL (
			BUY_DETAIL_CODE
			, ITEM_CODE
			, BUY_CNT
			, DETAIL_BUY_PRICE
			, BUY_CODE
			)
		<foreach collection="buyDetailList" item="buyDetail" separator="UNION ALL" index="i">
			SELECT (SELECT 'BUY_DETAIL_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(BUY_DETAIL_CODE, 12)))
					, 0) + 1 + #{i}, 3, '0') FROM BUY_DETAIL)
					, #{buyDetail.itemCode}
					, #{buyDetail.buyCnt}
					, #{buyDetail.detailBuyPrice}
					, #{buyDetail.buyCode}
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 구매 내역 조회 -->
<!-- 	<select id="purchaseList" resultMap="buy">
		SELECT BUY_CODE
			, MEM_ID
			, BUY_PRICE
			, BUY_DATE
			, 
		FROM SHOP_BUY
		WHERE
			MEM_ID = #{memId} 
	</select>
 -->	
 
 	<!-- 구매 내역 조회 -->
	<select id="purchaseList" resultMap="buy">
	    SELECT BUY.BUY_CODE
	    	, BUY.MEM_ID
	    	, BUY.BUY_PRICE
	    	, TO_CHAR(BUY.BUY_DATE, 'YYYY-MM-DD HH24:MI') AS BUY_DATE
	    	, BUY_DETAIL.BUY_DETAIL_CODE
	    	, BUY_DETAIL.ITEM_CODE
	    	, BUY_DETAIL.BUY_CNT
	    	, BUY_DETAIL.DETAIL_BUY_PRICE
	    	, IMG.ATTACHED_FILE_NAME
	    	, ITEM.ITEM_NAME
	    	, IMG.IS_MAIN
	    	, (SELECT COUNT(BUY_DETAIL_CODE) 
	    		FROM BUY_DETAIL
	    		WHERE BUY_CODE = BUY.BUY_CODE) AS ETC
	    FROM SHOP_BUY BUY
	    JOIN BUY_DETAIL ON BUY.BUY_CODE = BUY_DETAIL.BUY_CODE
	    JOIN ITEM_IMG IMG ON IMG.ITEM_CODE = BUY_DETAIL.ITEM_CODE
	    JOIN SHOP_ITEM ITEM ON ITEM.ITEM_CODE = BUY_DETAIL.ITEM_CODE
	    WHERE BUY.MEM_ID = #{memId}
	    <if test="month != null and month != 0">
	    	AND TO_CHAR(BUY_DATE, 'YYYYMMDD') >= TO_CHAR(add_months(SYSDATE,#{month}),'YYYYMMDD')
	    </if>
	    <if test="fromDate != null">
			AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') >= #{fromDate}
		    AND TO_CHAR(BUY_DATE, 'YYYY-MM-DD') &lt;= #{toDate} <!-- + INTERVAL '1' DAY, 'YYYYMMDD') FROM DUAL) -->	    
	    </if>
	    <if test="buyCode != null and buyCode != ''">
	    	AND BUY.BUY_CODE = #{buyCode}
	    </if>
	    AND IMG.IS_MAIN = 'Y'
	    ORDER BY BUY_DATE DESC, ITEM_CODE DESC
	</select>
	
	<!-- 구내 내역 별 상세 주문 조회 -->
	<select id="getBuyDetailList" resultMap="buyDetail">
		SELECT BUY_DETAIL_CODE
			, DETAIL.ITEM_CODE
			, BUY_CNT
			, DETAIL_BUY_PRICE
			, BUY_CODE
			, ATTACHED_FILE_NAME
		FROM BUY_DETAIL DETAIL, ITEM_IMG IMG, SHOP_BUY BUY
		WHERE IMG.ITEM_CODE = DETAIL.ITEM_CODE 
		AND BUY.BUY_CODE = DETAIL.BUY_CODE
		AND MEM_ID = #{memId}
		AND BUY.BUY_CODE = #{buyCode}
	</select>
	
	
</mapper>

	
